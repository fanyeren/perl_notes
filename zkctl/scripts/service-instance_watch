#! /bin/bash

source "public.inc"

SERVICE_INSTANCE_LIST=`cat`
[ "x$1" != "x" ] && CHECKING_FIELD=$1 || exit 1
[ "x$2" != "x" ] && LOOP_INTERVAL=$2 || LOOP_INTERVAL=60
[ "x$3" != "x" ] && MAX_LOOP_COUNT=$3 || MAX_LOOP_COUNT=60

SERVICE_INSTANCE_COUNT=0
for s in $SERVICE_INSTANCE_LIST; do
	${ZKCTL_BIN} service-instance get-meta-all --service-instance-id=$s >/dev/null
	[ $? -ne 0 ] && echo "service instance not exists! $s" && exit 1
	SERVICE_INSTANCE_COUNT=$((SERVICE_INSTANCE_COUNT+1))
done

LOOP_COUNT=0
while [ $LOOP_COUNT -lt $MAX_LOOP_COUNT ] ; do
	READY_SERVICE_INSTANCE_COUNT=0
	ERROR_SERVICE_INSTANCE_COUNT=0
	for s in $SERVICE_INSTANCE_LIST; do
		./check_consistency.sh --service-instance-id=$s --checking-field=${CHECKING_FIELD}
		[ $? -eq 0 ] && READY_SERVICE_INSTANCE_COUNT=$((READY_SERVICE_INSTANCE_COUNT+1))
		./check_blacklist.sh --service-instance-id=$s
		[ $? -ne 0 ] && ERROR_SERVICE_INSTANCE_COUNT=$((ERROR_SERVICE_INSTANCE_COUNT+1))
	done
	echo "`date` watcher.sh: trying #$LOOP_COUNT ... $READY_SERVICE_INSTANCE_COUNT ready, $ERROR_SERVICE_INSTANCE_COUNT error (of $SERVICE_INSTANCE_COUNT)"
	if [ $((READY_SERVICE_INSTANCE_COUNT+ERROR_SERVICE_INSTANCE_COUNT)) -ge $SERVICE_INSTANCE_COUNT ]; then
		exit 0
	else
		LOOP_COUNT=$((LOOP_COUNT+1))
		sleep $LOOP_INTERVAL
	fi
done

echo "`date` watcher.sh timeout!"
exit 1
